I"é<h1 id="what-is-password-less-authentication">What is Password-less Authentication?</h1>
<p>SSH Password-less Authentication is basically having the ability to log-on to another remote server without having to enter a password. This is particularly useful when you want to automate tasks/jobs such as zipping-up a directory by using a script, or even for remote command execution.</p>

<p>You should consider using SSH password-less authentication when you are dealing with a number of remote servers. By adding public keys to a file, you can eliminate the whole process of exposing a password elsewhere.</p>

<p>Using Password-less authentication now means we donâ€™t have to put our passwords in continuous integration. Therefore meaning that we donâ€™t need to share passwords between team members, thus making the password less accessible.</p>

<hr />

<h2 id="why-start-using-password-less-authentication">Why start using Password-less Authentication</h2>
<p>In some cases, you may need to use Password-less Authentication for running commands on a remote server. Before having Password-less Authentication setup on the server, you probably would have used a password that was being stored / remembered somewhere. This is not very secure as the password could easily be found. However, once you have setup the Password-less Authentication, the key is less accessible, therefore making it a lot more secure.</p>

<hr />

<h2 id="passwords-vs-keys">Passwords Vs Keys</h2>
<p>Passwords are strong right? Doing some research suggested that they can take seconds to crack if they do not contain any special characters, capital letters or numbers.</p>

<p><code>RSA Keys</code> - It would take approximately 1.5 million years with a standard desktop machine to crack a 2048 bit key.</p>

<p><code>Passwords</code> - It would take roughly 6 months with a standard desktop machine to crack a 10 character password containing special characters.</p>

<hr />

<h2 id="how-to-set-it-up">How to set it up</h2>
<p>First of all, you will need the SSH keys for the server that youâ€™re using.</p>

<p>Log onto the box you want to connect to
Navigate to <code>~/.ssh/</code>
Copy the <code>public key</code> into the <code>authorized_keys</code> file by running this command <code>ssh-copy-id -i ~/.ssh/mykey user@host</code>
If the SSH keys need to be regenerated, then you will need to follow these steps:</p>

<p>1) Logon to the box that you want to connect from
2) If itâ€™s a different user, impersonate using 
<code>sudo su - username</code>
3) In the home directory, run
<code>ssh-keygen -r rsa</code>
4) Donâ€™t set a password
5) It will generate the file at <code>HomeDirectory/.ssh/id_rsa.pub</code>
6) You will need the public key to be added to the box you want to connect to 
You should now be able to ssh onto the box from the client machine, without the password. 
e.g. <code>ssh username@hostname dir</code></p>

<h3 id="post-by-callum-leeming-junior-software-developer">Post by: <strong>Callum Leeming, Junior Software Developer</strong></h3>
:ET